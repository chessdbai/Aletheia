// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Aletheia.Webasm
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/Users/john/aletheia/packages/projects/Aletheia.Webasm/Aletheia.Webasm/App.razor"
using System.Reflection;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/john/aletheia/packages/projects/Aletheia.Webasm/Aletheia.Webasm/App.razor"
using Aletheia.Pgn;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/john/aletheia/packages/projects/Aletheia.Webasm/Aletheia.Webasm/App.razor"
using Aletheia.Pgn.Model;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/john/aletheia/packages/projects/Aletheia.Webasm/Aletheia.Webasm/App.razor"
using Aletheia.Pgn.Parser;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/john/aletheia/packages/projects/Aletheia.Webasm/Aletheia.Webasm/App.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/john/aletheia/packages/projects/Aletheia.Webasm/Aletheia.Webasm/App.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/john/aletheia/packages/projects/Aletheia.Webasm/Aletheia.Webasm/App.razor"
using Newtonsoft.Json.Serialization;

#line default
#line hidden
#nullable disable
    public partial class App : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 8 "/Users/john/aletheia/packages/projects/Aletheia.Webasm/Aletheia.Webasm/App.razor"
       

    public class ErrorInfo
    {
        public int Line { get; set; }
        public int Column { get; set; }
        public string Message { get; set; }
    }

    public class ParseResult
    {
        public bool IsError => ErrorInfo != null;
        public PgnGame Game { get; set; }
        public ErrorInfo ErrorInfo { get; set; }
    }

    public class ShouldSerializeContractResolver : CamelCasePropertyNamesContractResolver
    {
        public new static readonly ShouldSerializeContractResolver Instance = new ShouldSerializeContractResolver();

        protected override JsonProperty CreateProperty(MemberInfo member, MemberSerialization memberSerialization)
        {
            JsonProperty property = base.CreateProperty(member, memberSerialization);

            var moveType = typeof(List<>).MakeGenericType(new []{typeof(GamePly)});
            if (property.DeclaringType == moveType && property.PropertyName == "Manager")
            {
                property.ShouldSerialize =
                    instance =>
                    {
                        List<GamePly> e = (List<GamePly>)instance;
                        return e.Count > 0;
                    };
            }

            return property;
        }
    }

    private static readonly JsonSerializerSettings SerializationSettings = new JsonSerializerSettings()
    {
        ContractResolver = ShouldSerializeContractResolver.Instance,
        ReferenceLoopHandling = ReferenceLoopHandling.Ignore,
        NullValueHandling = NullValueHandling.Ignore
    };

    [JSInvokable]
    public static string ParsePgn(string pgnText)
    {
        var result = new ParseResult();
        try
        {
            var parser = new PgnGameParser();
            var parsedGame = parser.ParseGame(pgnText);
            result.Game = parsedGame;
            foreach (var ply in result.Game.MainLineAsList)
            {
                ply.PreviousPly = null;
            }
        }
        catch (Game.PgnParsingException e)
        {
            result.ErrorInfo = new ErrorInfo()
            {
                Line = (int)e.Line,
                Column = (int)e.Column,
                Message = e.Message
            };
        }
        var json = JsonConvert.SerializeObject(result);
        return json;
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
