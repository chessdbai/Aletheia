#pragma checksum "/Users/john/artemis/packages/projects/Artemis.Webasm/Artemis.Webasm/App.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4daf55c684d790d60c377d32fad06f3f11318435"
// <auto-generated/>
#pragma warning disable 1591
namespace Artemis.Webasm
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/Users/john/artemis/packages/projects/Artemis.Webasm/Artemis.Webasm/App.razor"
using ChessBot.Logic;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/john/artemis/packages/projects/Artemis.Webasm/Artemis.Webasm/App.razor"
using Artemis.Model;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/john/artemis/packages/projects/Artemis.Webasm/Artemis.Webasm/App.razor"
using Artemis.Tactics;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/john/artemis/packages/projects/Artemis.Webasm/Artemis.Webasm/App.razor"
using Artemis.Tactics.Pins;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/john/artemis/packages/projects/Artemis.Webasm/Artemis.Webasm/App.razor"
using Artemis.Tactics.Skewer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/john/artemis/packages/projects/Artemis.Webasm/Artemis.Webasm/App.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/john/artemis/packages/projects/Artemis.Webasm/Artemis.Webasm/App.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/john/artemis/packages/projects/Artemis.Webasm/Artemis.Webasm/App.razor"
using Newtonsoft.Json.Serialization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/john/artemis/packages/projects/Artemis.Webasm/Artemis.Webasm/App.razor"
using System.Collections.Immutable;

#line default
#line hidden
#nullable disable
    public partial class App : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 10 "/Users/john/artemis/packages/projects/Artemis.Webasm/Artemis.Webasm/App.razor"
       

    private static readonly JsonSerializerSettings SerializationSettings = new JsonSerializerSettings()
    {
        ContractResolver = new CamelCasePropertyNamesContractResolver()
    };
    
    static IDictionary<string, ISingularMotifAnalyzer> GetSingularAnalyzers()
    {
        return new Dictionary<string, ISingularMotifAnalyzer>(new []
        {
            new KeyValuePair<string, ISingularMotifAnalyzer>("Pin", new PinAnalyzer()), 
            new KeyValuePair<string, ISingularMotifAnalyzer>("Skewer", new SkewerAnalyzer()),
        });
    }
    
    [JSInvokable]
    public static string FindMotifsInPosition(string fen, List<string> analyzersToUse)
    {
        var SingularAnalyzers = GetSingularAnalyzers();
        async Task<(string, List<Motif>)> FindMotifsWithAnalyzerAsync(string analyzerName, FlatPosition position)
        {
            var analyzer = SingularAnalyzers[analyzerName];
            var motifs = await analyzer.FindMotifsInPositionAsync(position);
            return (analyzerName, motifs);
        }
        
        var board = Board.NewFromFen(fen);
        var position = new FlatPosition(board, "asdf");
        var analyzerTasks = analyzersToUse
            .Select(a => FindMotifsWithAnalyzerAsync(a, position));
        var results = Task.WhenAll(analyzerTasks).Result;
        var resultsByAnalyzer = results.ToDictionary(
            r => r.Item1,
            r => r.Item2);
        return JsonConvert.SerializeObject(resultsByAnalyzer, SerializationSettings);
    }

    [JSInvokable]
    public static string ListSingularAnalyzerModules()
    {
        var singularAnalyzers = GetSingularAnalyzers();
        var moduleNames = singularAnalyzers.Keys.ToList();
        return JsonConvert.SerializeObject(moduleNames, SerializationSettings);
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
